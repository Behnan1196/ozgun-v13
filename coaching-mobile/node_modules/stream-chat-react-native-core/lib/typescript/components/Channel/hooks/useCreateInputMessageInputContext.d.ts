import type { InputMessageInputContextValue } from '../../../contexts/messageInputContext/MessageInputContext';
export declare const useCreateInputMessageInputContext: ({ additionalTextInputProps, asyncMessagesLockDistance, asyncMessagesMinimumPressDuration, asyncMessagesMultiSendEnabled, asyncMessagesSlideToCancelDistance, AttachButton, AttachmentPickerBottomSheetHandle, attachmentPickerBottomSheetHandleHeight, attachmentPickerBottomSheetHeight, AttachmentPickerSelectionBar, attachmentSelectionBarHeight, AttachmentUploadPreviewList, AttachmentUploadProgressIndicator, AudioAttachmentUploadPreview, AudioRecorder, audioRecordingEnabled, AudioRecordingInProgress, AudioRecordingLockIndicator, AudioRecordingPreview, AudioRecordingWaveform, AutoCompleteSuggestionHeader, AutoCompleteSuggestionItem, AutoCompleteSuggestionList, channelId, CameraSelectorIcon, CommandInput, CommandsButton, compressImageQuality, CooldownTimer, CreatePollContent, CreatePollIcon, doFileUploadRequest, editMessage, FileAttachmentUploadPreview, FileSelectorIcon, handleAttachButtonPress, hasCameraPicker, hasCommands, hasFilePicker, hasImagePicker, ImageAttachmentUploadPreview, ImageSelectorIcon, Input, InputButtons, InputEditingStateHeader, InputReplyStateHeader, MoreOptionsButton, openPollCreationDialog, SendButton, sendMessage, SendMessageDisallowedIndicator, setInputRef, showPollCreationDialog, ShowThreadMessageInChannelButton, StartAudioRecordingButton, StopMessageStreamingButton, VideoAttachmentUploadPreview, VideoRecorderSelectorIcon, }: InputMessageInputContextValue & {
    /**
     * To ensure we allow re-render, when channel is changed
     */
    channelId?: string;
}) => InputMessageInputContextValue;
//# sourceMappingURL=useCreateInputMessageInputContext.d.ts.map