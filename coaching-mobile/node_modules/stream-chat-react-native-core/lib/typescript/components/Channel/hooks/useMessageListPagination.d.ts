import { Channel } from 'stream-chat';
/**
 * The useMessageListPagination hook handles pagination for the message list.
 * It provides functionality to load more messages, load more recent messages, load latest messages, and load channel around a specific message.
 *
 * @param channel The channel object for which the message list pagination is being handled.
 */
export declare const useMessageListPagination: ({ channel }: {
    channel: Channel;
}) => {
    copyMessagesStateFromChannel: (channel: Channel) => void;
    loadChannelAroundMessage: ({ limit, messageId, setTargetedMessage, }: {
        limit?: number;
        messageId?: string;
        setTargetedMessage?: (messageId: string) => void;
    }) => Promise<void>;
    loadChannelAtFirstUnreadMessage: ({ channelUnreadState, limit, setTargetedMessage, }: {
        channelUnreadState?: import("../../..").ChannelUnreadState;
        limit?: number;
        setChannelUnreadState?: React.Dispatch<React.SetStateAction<import("../../..").ChannelUnreadState | undefined>>;
        setTargetedMessage?: (messageId: string) => void;
    }) => Promise<void>;
    loadInitialMessagesStateFromChannel: (channel: Channel, hasMore: boolean) => void;
    loadLatestMessages: import("../../../hooks").StableCallback<[], Promise<void>>;
    loadMore: import("../../../hooks").StableCallback<[limit?: number | undefined], Promise<void>>;
    loadMoreRecent: import("../../../hooks").StableCallback<[limit?: number | undefined], Promise<void>>;
    state: import("./useChannelDataState").ChannelMessagesState;
};
//# sourceMappingURL=useMessageListPagination.d.ts.map