Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputEditingStateHeader = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _MessageComposerAPIContext = require("../../../contexts/messageComposerContext/MessageComposerAPIContext");
var _useMessageComposer = require("../../../contexts/messageInputContext/hooks/useMessageComposer");
var _ThemeContext = require("../../../contexts/themeContext/ThemeContext");
var _TranslationContext = require("../../../contexts/translationContext/TranslationContext");
var _icons = require("../../../icons");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/MessageInput/components/InputEditingStateHeader.tsx";
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var InputEditingStateHeader = exports.InputEditingStateHeader = function InputEditingStateHeader(_ref) {
  var propClearEditingState = _ref.clearEditingState;
  var messageComposer = (0, _useMessageComposer.useMessageComposer)();
  var _useTranslationContex = (0, _TranslationContext.useTranslationContext)(),
    t = _useTranslationContex.t;
  var _useMessageComposerAP = (0, _MessageComposerAPIContext.useMessageComposerAPIContext)(),
    contextClearEditingState = _useMessageComposerAP.clearEditingState;
  var clearEditingState = propClearEditingState || contextClearEditingState;
  var _useTheme = (0, _ThemeContext.useTheme)(),
    _useTheme$theme = _useTheme.theme,
    _useTheme$theme$color = _useTheme$theme.colors,
    black = _useTheme$theme$color.black,
    grey = _useTheme$theme$color.grey,
    grey_gainsboro = _useTheme$theme$color.grey_gainsboro,
    _useTheme$theme$messa = _useTheme$theme.messageInput.editingStateHeader,
    editingBoxHeader = _useTheme$theme$messa.editingBoxHeader,
    editingBoxHeaderTitle = _useTheme$theme$messa.editingBoxHeaderTitle;
  var onCloseHandler = (0, _react.useCallback)(function () {
    if (clearEditingState) {
      clearEditingState();
    }
    messageComposer.restore();
  }, [clearEditingState, messageComposer]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [styles.editingBoxHeader, editingBoxHeader],
    children: [(0, _jsxRuntime.jsx)(_icons.Edit, {
      pathFill: grey_gainsboro
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [styles.editingBoxHeaderTitle, {
        color: black
      }, editingBoxHeaderTitle],
      children: t('Editing Message')
    }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
      onPress: onCloseHandler,
      style: function style(_ref2) {
        var pressed = _ref2.pressed;
        return [{
          opacity: pressed ? 0.8 : 1
        }];
      },
      testID: "close-button",
      children: (0, _jsxRuntime.jsx)(_icons.CircleClose, {
        pathFill: grey
      })
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  editingBoxHeader: {
    alignItems: 'center',
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingBottom: 10
  },
  editingBoxHeaderTitle: {
    fontSize: 14,
    fontWeight: 'bold'
  }
});
InputEditingStateHeader.displayName = 'EditingStateHeader{messageInput}';
//# sourceMappingURL=InputEditingStateHeader.js.map