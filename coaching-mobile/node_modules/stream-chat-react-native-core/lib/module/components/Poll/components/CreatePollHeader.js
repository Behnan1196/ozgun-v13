var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreatePollHeader = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ThemeContext = require("../../../contexts/themeContext/ThemeContext");
var _TranslationContext = require("../../../contexts/translationContext/TranslationContext");
var _icons = require("../../../icons");
var _components = require("../components");
var _useCanCreatePoll = require("../hooks/useCanCreatePoll");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/Poll/components/CreatePollHeader.tsx";
var CreatePollHeader = exports.CreatePollHeader = function CreatePollHeader(_ref) {
  var onBackPressHandler = _ref.onBackPressHandler,
    onCreatePollPressHandler = _ref.onCreatePollPressHandler;
  var _useTranslationContex = (0, _TranslationContext.useTranslationContext)(),
    t = _useTranslationContex.t;
  var canCreatePoll = (0, _useCanCreatePoll.useCanCreatePoll)();
  var _useTheme = (0, _ThemeContext.useTheme)(),
    _useTheme$theme = _useTheme.theme,
    white = _useTheme$theme.colors.white,
    _useTheme$theme$poll$ = _useTheme$theme.poll.createContent,
    headerContainer = _useTheme$theme$poll$.headerContainer,
    sendButton = _useTheme$theme$poll$.sendButton;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [styles.headerContainer, {
      backgroundColor: white
    }, headerContainer],
    children: [(0, _jsxRuntime.jsx)(_components.PollModalHeader, {
      onPress: onBackPressHandler,
      title: t('Create Poll')
    }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
      disabled: !canCreatePoll,
      onPress: onCreatePollPressHandler,
      style: function style(_ref2) {
        var pressed = _ref2.pressed;
        return [{
          opacity: pressed ? 0.5 : 1
        }, styles.sendButton, sendButton];
      },
      children: (0, _jsxRuntime.jsx)(_icons.SendPoll, {
        height: 24,
        pathFill: canCreatePoll ? '#005DFF' : '#B4BBBA',
        viewBox: "0 0 24 24",
        width: 24
      })
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  headerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  sendButton: {
    paddingHorizontal: 16,
    paddingVertical: 18
  }
});
//# sourceMappingURL=CreatePollHeader.js.map