var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NameField = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _contexts = require("../../../contexts");
var _useMessageComposer = require("../../../contexts/messageInputContext/hooks/useMessageComposer");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/Poll/components/NameField.tsx";
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var NameField = exports.NameField = function NameField() {
  var _useTranslationContex = (0, _contexts.useTranslationContext)(),
    t = _useTranslationContex.t;
  var messageComposer = (0, _useMessageComposer.useMessageComposer)();
  var pollComposer = messageComposer.pollComposer;
  var handleFieldBlur = pollComposer.handleFieldBlur,
    updateFields = pollComposer.updateFields;
  var _useTheme = (0, _contexts.useTheme)(),
    _useTheme$theme = _useTheme.theme,
    _useTheme$theme$color = _useTheme$theme.colors,
    bg_user = _useTheme$theme$color.bg_user,
    black = _useTheme$theme$color.black,
    name = _useTheme$theme.poll.createContent.name;
  var onChangeText = (0, _react.useCallback)(function () {
    var _ref = (0, _asyncToGenerator2.default)(function* (newText) {
      yield updateFields({
        name: newText
      });
    });
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [updateFields]);
  var onBlur = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {
    yield handleFieldBlur('name');
  }), [handleFieldBlur]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [styles.text, {
        color: black
      }, name.title],
      children: t('Questions')
    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      onBlur: onBlur,
      onChangeText: onChangeText,
      placeholder: t('Ask a question'),
      style: [styles.textInputWrapper, styles.text, {
        backgroundColor: bg_user,
        color: black
      }, name.input]
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  text: {
    fontSize: 16
  },
  textInputWrapper: {
    alignItems: 'center',
    borderRadius: 12,
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 16,
    paddingHorizontal: 16,
    paddingVertical: 18
  }
});
//# sourceMappingURL=NameField.js.map