var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAttachmentPickerContext = exports.AttachmentPickerProvider = exports.AttachmentPickerContext = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _defaultBaseContextValue = require("../utils/defaultBaseContextValue");
var _isTestEnvironment = require("../utils/isTestEnvironment");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/contexts/attachmentPickerContext/AttachmentPickerContext.tsx";
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var AttachmentPickerContext = exports.AttachmentPickerContext = _react.default.createContext(_defaultBaseContextValue.DEFAULT_BASE_CONTEXT_VALUE);
var AttachmentPickerProvider = exports.AttachmentPickerProvider = function AttachmentPickerProvider(_ref) {
  var children = _ref.children,
    value = _ref.value;
  var bottomInsetValue = value == null ? void 0 : value.bottomInset;
  var topInsetValue = value == null ? void 0 : value.topInset;
  var _useState = (0, _react.useState)(bottomInsetValue != null ? bottomInsetValue : 0),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    bottomInset = _useState2[0],
    setBottomInset = _useState2[1];
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    selectedPicker = _useState4[0],
    setSelectedPicker = _useState4[1];
  var _useState5 = (0, _react.useState)(topInsetValue != null ? topInsetValue : 0),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    topInset = _useState6[0],
    setTopInset = _useState6[1];
  (0, _react.useEffect)(function () {
    setBottomInset(bottomInsetValue != null ? bottomInsetValue : 0);
  }, [bottomInsetValue]);
  (0, _react.useEffect)(function () {
    setTopInset(topInsetValue != null ? topInsetValue : 0);
  }, [topInsetValue]);
  var combinedValue = Object.assign({
    selectedPicker: selectedPicker,
    setBottomInset: setBottomInset,
    setSelectedPicker: setSelectedPicker,
    setTopInset: setTopInset
  }, value, {
    bottomInset: bottomInset,
    topInset: topInset
  });
  return (0, _jsxRuntime.jsx)(AttachmentPickerContext.Provider, {
    value: combinedValue,
    children: children
  });
};
var useAttachmentPickerContext = exports.useAttachmentPickerContext = function useAttachmentPickerContext() {
  var contextValue = (0, _react.useContext)(AttachmentPickerContext);
  if (contextValue === _defaultBaseContextValue.DEFAULT_BASE_CONTEXT_VALUE && !(0, _isTestEnvironment.isTestEnvironment)()) {
    throw new Error('The useAttachmentPickerContext hook was called outside the AttachmentPickerContext provider. Make sure you have configured OverlayProvider component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#overlay-provider');
  }
  return contextValue;
};
//# sourceMappingURL=AttachmentPickerContext.js.map