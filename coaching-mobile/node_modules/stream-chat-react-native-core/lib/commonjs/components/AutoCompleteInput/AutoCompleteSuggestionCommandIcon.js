var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SuggestionCommandIcon = exports.AutoCompleteSuggestionCommandIcon = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ThemeContext = require("../../contexts/themeContext/ThemeContext");
var _icons = require("../../icons");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/AutoCompleteInput/AutoCompleteSuggestionCommandIcon.tsx";
var SuggestionCommandIcon = exports.SuggestionCommandIcon = function SuggestionCommandIcon(_ref) {
  var name = _ref.name;
  var _useTheme = (0, _ThemeContext.useTheme)(),
    white = _useTheme.theme.colors.white;
  if (name === 'ban') {
    return (0, _jsxRuntime.jsx)(_icons.UserDelete, {
      height: 16,
      pathFill: white,
      width: 16
    });
  } else if (name === 'flag') {
    return (0, _jsxRuntime.jsx)(_icons.Flag, {
      pathFill: white
    });
  } else if (name === 'giphy') {
    return (0, _jsxRuntime.jsx)(_icons.GiphyIcon, {});
  } else if (name === 'imgur') {
    return (0, _jsxRuntime.jsx)(_icons.Imgur, {});
  } else if (name === 'mute') {
    return (0, _jsxRuntime.jsx)(_icons.Mute, {
      height: 16,
      pathFill: white,
      width: 16
    });
  } else if (name === 'unban') {
    return (0, _jsxRuntime.jsx)(_icons.UserAdd, {
      height: 16,
      pathFill: white,
      width: 16
    });
  } else if (name === 'unmute') {
    return (0, _jsxRuntime.jsx)(_icons.Sound, {
      pathFill: white
    });
  } else {
    return (0, _jsxRuntime.jsx)(_icons.Lightning, {
      fill: white,
      size: 16
    });
  }
};
var AutoCompleteSuggestionCommandIcon = exports.AutoCompleteSuggestionCommandIcon = function AutoCompleteSuggestionCommandIcon(_ref2) {
  var name = _ref2.name;
  var _useTheme2 = (0, _ThemeContext.useTheme)(),
    _useTheme2$theme = _useTheme2.theme,
    accent_blue = _useTheme2$theme.colors.accent_blue,
    iconContainer = _useTheme2$theme.messageInput.suggestions.command.iconContainer;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [styles.iconContainer, {
      backgroundColor: accent_blue
    }, iconContainer],
    children: (0, _jsxRuntime.jsx)(SuggestionCommandIcon, {
      name: name
    })
  });
};
var styles = _reactNative.StyleSheet.create({
  iconContainer: {
    alignItems: 'center',
    borderRadius: 12,
    height: 24,
    justifyContent: 'center',
    marginRight: 8,
    width: 24
  }
});
//# sourceMappingURL=AutoCompleteSuggestionCommandIcon.js.map